name: Release
on:
  workflow_call:
    inputs:
      version:
        description: 'A version to be released'
        required: true
        type: string
    secrets:
      OCI_REGISTRY_USER:
        description: 'oci registry username'
        required: true
      OCI_REGISTRY_PASS:
        description: 'oci registry password'
        required: true

jobs:
  publish:
    name: Package, Publish
    runs-on:
      - ubuntu-latest
    steps:
      - id: checkout
        uses: actions/checkout@v2
      - if: ${{ github.event_name != 'pull_request' || ! github.event.pull_request.head.repo.fork }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.OCI_REGISTRY_USER }}
          password: ${{ secrets.OCI_REGISTRY_PASS }}
      - id: setup-java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - id: setup-pack
        uses: buildpacks/github-actions/setup-pack@v4.4.0
      - id: package
        run: |
          #!/usr/bin/env bash
          set -euo pipefail
          VERSION=$(echo ${{ inputs.version }} | tr -d 'v')
          IMAGE_NAME="ghcr.io/${GITHUB_REPOSITORY}"
          mvn versions:set -DnewVersion=$VERSION
          pack build ${IMAGE_NAME}:${VERSION} \
            --builder paketobuildpacks/builder:tiny \
            --publish \
            --env BP_JVM_VERSION=17 \
            --env BP_OCI_SOURCE=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY
          DIGEST="$(crane digest ${IMAGE_NAME}:${VERSION})"
          echo "::set-output name=id::${IMAGE_NAME}"
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=digest::${IMAGE_NAME}@${DIGEST}"
        shell: bash
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package.outputs.version }}
          release_name: ${{ steps.package.outputs.version }}
          body: |
            Image url: ${{ steps.package.outputs.id }}:${{ steps.package.outputs.version }}
            Released with digest: ${{ steps.package.outputs.digest }}
          draft: false
          prerelease: false

    outputs:
      version: ${{ steps.package.outputs.version }}
  call-deploy-workflow:
    uses: dhenne/spring-boot-service/.github/workflows/deployment.yml@main
    needs: publish
    with:
      version: ${{ needs.publish.outputs.version }}
      environment: test

